<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.17</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.trailerplan</groupId>
	<artifactId>trailerplan-idserver</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>trailerplan-idserver</name>
	<description>identity server back end</description>

	<properties>
		<project.root.name>trailerplan</project.root.name>
		<java.version>11</java.version>
		<data-container-app_java.dir>data/container/app_java</data-container-app_java.dir>
		<data-container-config.dir>data/container/config</data-container-config.dir>
		<docker.image.name>${project.artifactId}</docker.image.name>
		<environment.name.LOCAL>local</environment.name.LOCAL>
		<environment.name.INT>int</environment.name.INT>
		<environment.name.RCT>rct</environment.name.RCT>
		<postgresql.driver.version>42.6.0</postgresql.driver.version>
		<maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
		<maven-docker-spotify.version>1.4.13</maven-docker-spotify.version>
		<jjwt-api.version>0.9.1</jjwt-api.version>
		<spring-security-oauth2-autoconfigure.version>2.6.8</spring-security-oauth2-autoconfigure.version>
	</properties>

	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env.BUILD_ENV</name>
					<value>${environment.name.LOCAL}</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy
												file="${project.basedir}/src/main/resources/application-local.properties"
												tofile="${project.build.directory}/classes/application.properties"
										/>
										<copy
												file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-local"
												tofile="${project.build.directory}/Dockerfile"
										/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>int</id>
			<properties>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env.BUILD_ENV</name>
					<value>${environment.name.INT}</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy
												file="${project.basedir}/src/main/resources/application-int.properties"
												tofile="${project.build.directory}/classes/application.properties"
										/>
										<copy
												file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-int"
												tofile="${project.build.directory}/Dockerfile"
										/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>rct</id>
			<properties>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env.BUILD_ENV</name>
					<value>${environment.name.RCT}</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy
												file="${project.basedir}/src/main/resources/application-rct.properties"
												tofile="${project.build.directory}/classes/application.properties"
										/>
										<copy
												file="${project.basedir}/${data-container-app_java.dir}/Dockerfile-rct"
												tofile="${project.build.directory}/Dockerfile"
										/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
			<version>${spring-security-oauth2-autoconfigure.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.driver.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<image>
						<builder>paketobuildpacks/builder-jammy-base:latest</builder>
					</image>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
